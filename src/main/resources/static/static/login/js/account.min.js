var userAgent = navigator.userAgent;
if (/Android|webOS|iPhone|iPod|BlackBerry/i.test(userAgent)) {
  $("html").addClass("mobile")
}
if (!/macintosh|mac os x/i.test(userAgent)) {
  $("html").addClass("winos")
}
function getQueryString(name) {
  var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)","i");
  var r = window.location.search.substr(1).match(reg);
  if (r != null)
    return unescape(r[2]);
  return null
}
function isPoneAvailable(tel) {
  var myreg = /^[1][3,4,5,6,7,8,9][0-9]{9}$/;
  if (!myreg.test(tel)) {
    return false
  } else {
    return true
  }
}
function compile(code) {
  var c = String.fromCharCode(code.charCodeAt(0) + code.length);
  for (var i = 1; i < code.length; i++) {
    c += String.fromCharCode(code.charCodeAt(i) + code.charCodeAt(i - 1))
  }
  return escape(c)
}
function uncompile(code) {
  code = unescape(code);
  var c = String.fromCharCode(code.charCodeAt(0) - code.length);
  for (var i = 1; i < code.length; i++) {
    c += String.fromCharCode(code.charCodeAt(i) - c.charCodeAt(i - 1))
  }
  return c
}
var Main = {
  data: function() {
    return {
      action: 1,
      count: 59,
      showGetCode: true,
      count2: 59,
      showGetCode2: true,
      timer: null,
      timer2: null,
      remember: true,
      loginNum: 1,
      loginData: {
        username: "",
        password: "",
        pcode: ""
      },
      registerData: {
        mobile: "",
        password: "",
        rePassword: "",
        pcode: "",
        code: "",
        agreement: false
      },
      resetPwd: {
        username: "",
        pcode: "",
        password: "",
        rePassword: "",
        verifycode: ""
      },
      protocol: false
    }
  },
  created: function() {
    var _t = this;
    var plmokn = $.cookie("name");
    var oknijb = $.cookie("salt_code");
    if (plmokn && oknijb) {
      _t.loginData.username = plmokn;
      _t.loginData.password = uncompile(oknijb)
    }
    var loginNum = sessionStorage.getItem("loginNum");
    if (loginNum) {
        _t.loginNum = Number(loginNum)
    }
    var ac = getQueryString("a");
    if (ac == "register") {
      _t.action = 2
    }
    sessionStorage.clear()
  },
  methods: {
    R: function(msg, t, d) {
      var type = t || "warning";
      var duration = d || 3e3;
      this.$message({
        message: msg,
        type: type,
        duration: duration
      })
    },
    getCode: function(mobile, type) {
      var _t = this;
      var isMobile = isPoneAvailable(mobile);
      var code = _t.registerData.pcode;
      if (type) {
        code = _t.resetPwd.pcode;
      }
      if (!isMobile) {
        _t.R("请填写正确的手机号码!", "error");
        return
      }
      if (!code) {
        _t.R("请填写图像验证码!", "error");
        return
      }
      function timing() {
        var TIME_COUNT = 59;
        if (!_t.timer) {
          _t.count = TIME_COUNT;
          _t.showGetCode = false;
          _t.timer = setInterval(function() {
            if (_t.count > 0 && _t.count <= TIME_COUNT) {
              _t.count--
            } else {
              _t.showGetCode = true;
              clearInterval(_t.timer);
              _t.timer = null
            }
          }, 1e3)
        }
      }
      function timing2() {
        var TIME_COUNT = 59;
        if (!_t.timer2) {
          _t.count2 = TIME_COUNT;
          _t.showGetCode2 = false;
          _t.timer2 = setInterval(function() {
            if (_t.count2 > 0 && _t.count2 <= TIME_COUNT) {
              _t.count2--
            } else {
              _t.showGetCode2 = true;
              clearInterval(_t.timer2);
              _t.timer2 = null
            }
          }, 1e3)
        }
      }
      var loading = _t.$loading({
        lock: true,
        background: "rgba(0, 0, 0, 0.2)"
      });
      $.post("/register/vcode", {
        phone: mobile,
        code: code
      }, function(r) {
        loading.close();
        if (r.code === 0) {
          if (type) {
            timing2()
          } else {
            timing()
          }
          _t.R("验证码发送成功!", "success")
        } else {
          _t.changeImg();
          _t.R(r.msg, "error")
        }
      }).fail(function(err) {
        loading.close();
        _t.changeImg();
        _t.R("系统错误，请稍后再试。", "error")
      })
    },
    resetPwdFn: function() {
      var _t = this;
      var data = _t.resetPwd;
      var isMobile = isPoneAvailable(data.username);
      if (!isMobile) {
        _t.R("请填写正确的手机号码!", "error");
        return false
      }
      if (isNaN(data.verifycode) || data.verifycode.length !== 4) {
        _t.R("验证码格式不正确，请重新输入！", "error");
        return false
      }
      if (data.password !== data.rePassword) {
        _t.R("两次输入的密码不一致，请重新输入！", "error");
        return false
      }
      if (!_t.isPasswd(data.password)) {
        return false
      }
      var loading = _t.$loading({
        lock: true,
        background: "rgba(0, 0, 0, 0.2)"
      });
      $.post("/register/findpwd", data, function(r) {
        loading.close();
        if (r.code === 0) {
          _t.R("重置密码成功，即将为您自动登录!", "success");
          _t.autoLogin(data.username, data.password)
        } else {
          _t.R(r.msg, "error")
        }
      }).fail(function(err) {
        loading.close();
        _t.R("系统错误，请稍后再试。", "error")
      })
    },
    register: function() {
      var _t = this;
      var data = _t.registerData;
      var isMobile = isPoneAvailable(data.mobile);
      if (!isMobile) {
        _t.R("请填写正确的手机号码!", "error");
        return false
      }
      if (data.password !== data.rePassword) {
        _t.R("两次输入的密码不一致，请重新输入！", "error");
        return false
      }
      if (!_t.isPasswd(data.password)) {
        return false
      }
      if (isNaN(data.code) || data.code.length !== 4) {
        _t.R("验证码格式不正确，请重新输入！", "error");
        return false
      }
      if (!data.agreement) {
        _t.R("请阅读<<中昱维信用户协议>>并同意协议！", "error");
        return false
      }
      var extensionid = getQueryString("u");
      var register = {
        username: data.mobile,
        password: data.password,
        verifycode: data.code,
        extensionid: extensionid
      };
      var loading = _t.$loading({
        lock: true,
        background: "rgba(0, 0, 0, 0.2)"
      });
      $.post("/register", register, function(r) {
        loading.close();
        if (r.code === 0) {
          _t.R("注册成功，即将为您自动登录!", "success");
          _t.autoLogin(data.mobile, data.password)
        } else {
          _t.R(r.msg, "error")
        }
      }).fail(function(err) {
        loading.close();
        _t.R("系统错误，请稍后再试。", "error")
      })
    },
    autoLogin: function(username, password) {
      var _t = this;
      var loading = _t.$loading({
        lock: true,
        background: "rgba(0, 0, 0, 0.2)"
      });
      $.post("/login", {
        username: username,
        password: password,
        isregister: 1
      }, function(r) {
        loading.close();
        if (r.code == 0) {
          window.location.href = "/index"
        } else {
          _t.R(r.msg, "error")
        }
      }).fail(function(err) {
        loading.close();
        _t.R("系统错误，请稍后再试。", "error")
      })
    },
    login: function() {
      var _t = this;
      var data = _t.loginData;
      var loading = _t.$loading({
        lock: true,
        background: "rgba(0, 0, 0, 0.2)"
      });
      $.post("/login", data, function(r) {
        loading.close();
        if (r.code == 0) {
          if (_t.remember) {
            $.cookie("name", data.username, {
              expires: 7,
              path: "/"
            });
            $.cookie("salt_code", compile(data.password), {
              expires: 7,
              path: "/"
            })
          } else {
            $.cookie("name", null, {
              expires: -1,
              path: "/"
            });
            $.cookie("salt_code", null, {
              expires: -1,
              path: "/"
            })
          }
          window.location.href = "/index"
        } else {
          _t.loginNum = _t.loginNum + 1;
          sessionStorage.setItem("loginNum", _t.loginNum);
          _t.changeImg();
          _t.R(r.msg, "error")
        }
      }).fail(function(err) {
        loading.close();
        _t.changeImg();
        _t.R("系统错误，请稍后再试。", "error")
      })
    },
    changeImg: function() {
      var _t = this;
      var imgSrc = $("#imgObj");
      var src = "/register/photocode";
      imgSrc.attr("src", _t.changeUrl(src))
    },
    changeUrl: function(url) {
      var timestamp = (new Date).valueOf();
      var index = url.indexOf("?", url);
      if (index > 0) {
        url = url.substring(0, url.indexOf(url, "?"))
      }
      if (url.indexOf("&") >= 0) {
        url = url + "×tamp=" + timestamp
      } else {
        url = url + "?timestamp=" + timestamp
      }
      return url
    },
    isPasswd: function(s) {
      var _t = this;
      var patrn = /^[0-9a-z!._@#$%^&*()]{6,18}$/i;
      if (!patrn.test(s)) {
        _t.R("请输入6-18位密码，支持英文、数字及符号", "error")
      }
      return patrn.test(s)
    }
  }
};
var Ctor = Vue.extend(Main);
(new Ctor).$mount("#app");
